version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
      - /var/run/docker.sock:/var/run/docker-host.sock
    command: sleep infinity
    environment:
      - DOCKER_HOST=unix:///var/run/docker-host.sock
      - GRAPHITI_MCP_URI=http://neo4j:8001
      - ENABLE_KNOWLEDGE_GRAPH=true
    networks:
      - workflow-network
    depends_on:
      - neo4j
      - graphiti-api

  neo4j:
    image: neo4j:5.15-community
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*,gds.*"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    networks:
      - workflow-network

  graphiti-api:
    image: graphiti/api:latest
    restart: unless-stopped
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: password
    ports:
      - "8000:8000"
    networks:
      - workflow-network
    depends_on:
      - neo4j

  mcp-server:
    build:
      context: ../graphiti/mcp_server
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      GRAPHITI_API_URL: http://graphiti-api:8000
    ports:
      - "8001:8001"
    networks:
      - workflow-network
    depends_on:
      - graphiti-api

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: workflow_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - workflow-network

volumes:
  neo4j-data:
  neo4j-logs:
  postgres-data:

networks:
  workflow-network: