# Docker Compose file for Islamic Text Workflow development environment
version: '3.8'

services:
  # Main development environment
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      target: development
    volumes:
      - ..:/workspace:cached
      - /var/run/docker.sock:/var/run/docker-host.sock:ro
      - python_packages:/home/developer/.local
      - bash_history:/home/developer/.bash_history_mount
      - vscode_extensions:/home/developer/.vscode-server
    command: sleep infinity
    environment:
      - DOCKER_HOST=unix:///var/run/docker-host.sock
      - PYTHONPATH=/workspace:/workspace/graphiti-main
      - ISLAMIC_TEXT_WORKFLOW=/workspace
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=islamictext2024
      - CLAUDE_DOCKER_API=http://claude-docker-api:8000
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
    networks:
      - islamic-dev-network
    depends_on:
      neo4j:
        condition: service_healthy
      claude-docker-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python3", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Neo4j Knowledge Graph Database
  neo4j:
    image: neo4j:5.26-community
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/islamictext2024
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_dbms_default__database=neo4j
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1G
    ports:
      - "7474:7474"  # HTTP browser interface
      - "7687:7687"  # Bolt protocol
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
    networks:
      - islamic-dev-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "islamictext2024", "MATCH () RETURN count(*) as count"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

  # Claude Docker API Service (from existing Graphiti integration)
  claude-docker-api:
    image: graphiti-claude-docker-api:latest
    container_name: claude-docker-api-dev
    ports:
      - "8000:8000"
    volumes:
      # Mount the streamlined scripts
      - ../graphiti-main/claude_docker/api/claude_docker_api_stdio.py:/app/claude_docker_api_stdio.py:ro
      - ../graphiti-main/claude_docker/api/claude_docker_api_stdio_with_logging.py:/app/claude_docker_api_stdio_with_logging.py:ro
      - ../graphiti-main/claude_docker/workers/claude_docker_worker_stdio.py:/app/claude_docker_worker_stdio.py:ro
      - ../graphiti-main/claude_docker/scripts/claude_docker_runner.sh:/workspace/claude_docker_runner.sh:ro
      
      # Mount logs directory
      - ../graphiti-main/claude_docker/logs:/app/logs:rw
      
      # Mount Docker socket for running Claude containers
      - /var/run/docker.sock:/var/run/docker.sock
      
      # Mount Claude authentication from host
      - ${HOME}/.claude-docker:${HOME}/.claude-docker:rw
      
      # Mount project for access
      - ..:/workspace/islamic-text-workflow:ro
    environment:
      - PYTHONUNBUFFERED=1
      - WORKER_COUNT=3
    networks:
      - islamic-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Documentation server for browsing guides
  docs:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ../documentation:/usr/share/nginx/html/docs:ro
      - ../README.md:/usr/share/nginx/html/index.md:ro
      - ../.devcontainer/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - islamic-dev-network
    restart: unless-stopped

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  python_packages:
    driver: local
  bash_history:
    driver: local
  vscode_extensions:
    driver: local

networks:
  islamic-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16