version: '3.8'

services:
  neo4j:
    image: neo4j:5.26-community
    container_name: graphiti-neo4j-dev
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_server_memory_heap_max__size=2G
      - NEO4J_server_memory_heap_initial__size=1G
    volumes:
      - neo4j_data_dev:/data
      - neo4j_logs_dev:/logs
    networks:
      - graphiti-dev

  graphiti-worker:
    build:
      context: ../..
      dockerfile: claude_docker/docker/Dockerfile.worker
    container_name: graphiti-software-engineering
    environment:
      - GRAPHITI_MODE=software_engineering
      - GRAPHITI_CONFIG_PATH=/app/config/software_engineering.yaml
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - LLM_PROVIDER=claude_docker
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - WORKER_ID=graphiti-dev-1
    volumes:
      - ./config:/app/config:ro
      - ../workers:/app/workers:ro
      - ${HOME}/.cache/graphiti:/root/.cache/graphiti  # LLM cache
      - /var/run/docker.sock:/var/run/docker.sock  # For Claude Docker
    stdin_open: true
    tty: true
    networks:
      - graphiti-dev
    depends_on:
      - neo4j
    command: python /app/workers/graphiti_worker.py

  # Optional: Graphiti UI for visualization
  neo4j-browser:
    image: neo4j:5.26-community
    container_name: graphiti-browser-dev
    ports:
      - "7475:7474"
    environment:
      - NEO4J_AUTH=none
    command: neo4j-admin server console
    networks:
      - graphiti-dev
    profiles:
      - ui

volumes:
  neo4j_data_dev:
  neo4j_logs_dev:

networks:
  graphiti-dev:
    driver: bridge