# Islamic Text Processing Claude Agents - Docker Compose
# Implements claude-docker patterns for reliable session management

# ENHANCED NETWORK ISOLATION (claude-docker pattern)
networks:
  islamic_text_agents:
    driver: bridge
    name: islamic_text_agents
    ipam:
      config:
        - subnet: 172.25.0.0/16

# Volumes are now handled through host directory mounting
# Following claude-docker pattern for persistent authentication

services:
  # Dashboard - Knowledge Engineering Visibility Interface
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID:-1001}
        USER_GID: ${USER_GID:-1001}
    container_name: islamic-text-dashboard
    environment:
      - AGENT_NAME=dashboard
      - DASHBOARD_MODE=true
      - PORT=8080
      - ORCHESTRATOR_URL=http://orchestrator:4000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
    ports:
      - "8080:8080"
    volumes:
      # Persistent Claude configuration (claude-docker pattern)
      - ${HOME}/.claude-docker/claude-home:/home/claude-user/.claude:rw
      # SSH keys for git operations
      - ${HOME}/.claude-docker/ssh:/home/claude-user/.ssh:ro
      - ./orchestration-visibility:/app/dashboard:ro
    command: ["tini", "--", "node", "/app/orchestrator.js"]
    networks:
      - islamic_text_agents
    restart: unless-stopped
    depends_on:
      - orchestrator
    
    # SECURITY HARDENING
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    
    # ENHANCED HEALTH MONITORING
    healthcheck:
      test: ["CMD", "curl", "-f", "--max-time", "5", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Orchestrator - Workflow Coordination and Agent Management
  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID:-1001}
        USER_GID: ${USER_GID:-1001}
    container_name: islamic-text-orchestrator
    environment:
      - AGENT_NAME=orchestrator
      - ORCHESTRATOR_MODE=true
      - PORT=4000
    ports:
      - "4000:4000"
    volumes:
      # Persistent Claude configuration (claude-docker pattern)
      - ${HOME}/.claude-docker/claude-home:/home/claude-user/.claude:rw
      # SSH keys for git operations
      - ${HOME}/.claude-docker/ssh:/home/claude-user/.ssh:ro
    command: ["tini", "--", "node", "/app/orchestrator.js"]
    networks:
      - islamic_text_agents
    restart: unless-stopped
    depends_on:
      - flowchart_mapper
      - network_mapper
      - metadata_hunter
      - content_synthesizer
      - data_pipeline
    
    # SECURITY HARDENING (claude-docker pattern)
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    
    # ENHANCED HEALTH MONITORING
    healthcheck:
      test: ["CMD", "curl", "-f", "--max-time", "5", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Flowchart Mapper Agent - Intellectual Architecture Analysis
  flowchart_mapper:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID:-1000}
        USER_GID: ${USER_GID:-1000}
    container_name: islamic-text-flowchart-mapper
    environment:
      - AGENT_NAME=flowchart_mapper
      - AGENT_PORT=3001
      - CLAUDE_HOME=/home/claude-user/.claude
      - CLAUDE_CONTINUE_FLAG=${CLAUDE_CONTINUE_FLAG:-}
      - CI=true
      - TERM=dumb
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
    ports:
      - "3001:3001"
    volumes:
      # Workspace directory
      - .:/workspace:rw
      # Persistent Claude configuration (claude-docker pattern)
      - ${HOME}/.claude-docker/claude-home:/home/claude-user/.claude:rw
      # SSH keys for git operations
      - ${HOME}/.claude-docker/ssh:/home/claude-user/.ssh:ro
      # Project-specific .claude directory
      - ./.claude:/app/.claude:rw
    networks:
      - islamic_text_agents
    restart: unless-stopped
    
    # SECURITY HARDENING (claude-docker pattern)
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    
    # RESOURCE LIMITS (claude-docker pattern - higher memory for complex analysis)
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 256M
    
    # STRUCTURED LOGGING
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "agent=flowchart,service=islamic-text-workflow"
    
    # ENHANCED HEALTH MONITORING
    healthcheck:
      test: ["CMD", "curl", "-f", "--max-time", "5", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Network Mapper Agent - Conceptual Relationship Mapping
  network_mapper:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID:-1000}
        USER_GID: ${USER_GID:-1000}
    container_name: islamic-text-network-mapper
    environment:
      - AGENT_NAME=network_mapper
      - AGENT_PORT=3002
      - CLAUDE_HOME=/home/claude-user/.claude
      - CLAUDE_CONTINUE_FLAG=${CLAUDE_CONTINUE_FLAG:-}
      - CI=true
      - TERM=dumb
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
    ports:
      - "3002:3002"
    volumes:
      - .:/workspace:rw
      - ${HOME}/.claude-docker/claude-home:/home/claude-user/.claude:rw
      - ${HOME}/.claude-docker/ssh:/home/claude-user/.ssh:ro
      - ./.claude:/app/.claude:rw
    networks:
      - islamic_text_agents
    restart: unless-stopped
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "agent=network,service=islamic-text-workflow"
    healthcheck:
      test: ["CMD", "curl", "-f", "--max-time", "5", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Metadata Hunter Agent - Bibliographic Research
  metadata_hunter:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID:-1000}
        USER_GID: ${USER_GID:-1000}
    container_name: islamic-text-metadata-hunter
    environment:
      - AGENT_NAME=metadata_hunter
      - AGENT_PORT=3003
      - CLAUDE_HOME=/home/claude-user/.claude
      - CLAUDE_CONTINUE_FLAG=${CLAUDE_CONTINUE_FLAG:-}
      - CI=true
      - TERM=dumb
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
    ports:
      - "3003:3003"
    volumes:
      - .:/workspace:rw
      - ${HOME}/.claude-docker/claude-home:/home/claude-user/.claude:rw
      - ${HOME}/.claude-docker/ssh:/home/claude-user/.ssh:ro
      - ./.claude:/app/.claude:rw
    networks:
      - islamic_text_agents
    restart: unless-stopped
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "agent=metadata,service=islamic-text-workflow"
    healthcheck:
      test: ["CMD", "curl", "-f", "--max-time", "5", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Content Synthesizer Agent - Catalog Synthesis
  content_synthesizer:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID:-1000}
        USER_GID: ${USER_GID:-1000}
    container_name: islamic-text-content-synthesizer
    environment:
      - AGENT_NAME=content_synthesizer
      - AGENT_PORT=3004
      - CLAUDE_HOME=/home/claude-user/.claude
      - CLAUDE_CONTINUE_FLAG=${CLAUDE_CONTINUE_FLAG:-}
      - CI=true
      - TERM=dumb
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
    ports:
      - "3004:3004"
    volumes:
      - .:/workspace:rw
      - ${HOME}/.claude-docker/claude-home:/home/claude-user/.claude:rw
      - ${HOME}/.claude-docker/ssh:/home/claude-user/.ssh:ro
      - ./.claude:/app/.claude:rw
    networks:
      - islamic_text_agents
    restart: unless-stopped
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "agent=synthesis,service=islamic-text-workflow"
    healthcheck:
      test: ["CMD", "curl", "-f", "--max-time", "5", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Data Pipeline Agent - Production Database Integration
  data_pipeline:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID:-1000}
        USER_GID: ${USER_GID:-1000}
    container_name: islamic-text-data-pipeline
    environment:
      - AGENT_NAME=data_pipeline
      - AGENT_PORT=3005
      - CLAUDE_HOME=/home/claude-user/.claude
      - CLAUDE_CONTINUE_FLAG=${CLAUDE_CONTINUE_FLAG:-}
      - CI=true
      - TERM=dumb
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
    ports:
      - "3005:3005"
    volumes:
      - .:/workspace:rw
      - ${HOME}/.claude-docker/claude-home:/home/claude-user/.claude:rw
      - ${HOME}/.claude-docker/ssh:/home/claude-user/.ssh:ro
      - ./.claude:/app/.claude:rw
    networks:
      - islamic_text_agents
    restart: unless-stopped
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "agent=pipeline,service=islamic-text-workflow"
    healthcheck:
      test: ["CMD", "curl", "-f", "--max-time", "5", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s