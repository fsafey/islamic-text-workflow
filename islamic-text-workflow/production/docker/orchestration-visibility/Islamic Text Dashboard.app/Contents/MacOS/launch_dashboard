#!/bin/bash

# Islamic Text Processing Dashboard Launcher
# This script starts the orchestrator and opens the dashboard
# Usage: ./launch_dashboard [mode] [options]
# Modes: normal, debug, agents-only, monitor-only, fast, thorough
# Options: --auto-start --no-browser --verbose --batch-size=N

echo "🎭 Starting Islamic Text Processing Dashboard..."

# Parse command line arguments
STARTUP_MODE="normal"
AUTO_START_AGENTS="false"
AUTO_START_PIPELINE="false"
OPEN_BROWSER="true"
VERBOSE_LOGGING="false"
BATCH_SIZE="5"
WORKFLOW_PRESET="standard"

# Parse first argument as mode if provided
if [ ! -z "$1" ] && [[ ! "$1" =~ ^-- ]]; then
    STARTUP_MODE="$1"
    shift
fi

# Parse remaining options
while [[ $# -gt 0 ]]; do
    case $1 in
        --auto-start)
            AUTO_START_AGENTS="true"
            AUTO_START_PIPELINE="true"
            shift
            ;;
        --no-browser)
            OPEN_BROWSER="false"
            shift
            ;;
        --verbose)
            VERBOSE_LOGGING="true"
            shift
            ;;
        --batch-size=*)
            BATCH_SIZE="${1#*=}"
            shift
            ;;
        --workflow=*)
            WORKFLOW_PRESET="${1#*=}"
            shift
            ;;
        *)
            echo "Unknown option: $1"
            shift
            ;;
    esac
done

# Set workflow preset based on mode
case $STARTUP_MODE in
    "debug")
        WORKFLOW_PRESET="debug"
        VERBOSE_LOGGING="true"
        BATCH_SIZE="1"
        ;;
    "fast")
        WORKFLOW_PRESET="fast"
        BATCH_SIZE="10"
        ;;
    "thorough")
        WORKFLOW_PRESET="thorough"
        BATCH_SIZE="2"
        ;;
    "agents-only")
        AUTO_START_AGENTS="true"
        ;;
esac

echo "📋 Configuration:"
echo "   Mode: $STARTUP_MODE"
echo "   Workflow Preset: $WORKFLOW_PRESET"
echo "   Batch Size: $BATCH_SIZE"
echo "   Auto Start: $AUTO_START_AGENTS"
echo "   Verbose: $VERBOSE_LOGGING"

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Use absolute path to the orchestration directory
PROJECT_DIR="/Users/farieds/imam-lib-masha-allah/islamic-text-workflow/agent-reservoir-workflow/production/orchestration"

# Change to the orchestration directory
cd "$PROJECT_DIR"

echo "📍 Working directory: $PROJECT_DIR"

# Set up PATH for Homebrew and common Node.js locations
export PATH="/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:$PATH"

# Check if Node.js is available
if ! command -v node &> /dev/null; then
    osascript -e 'display dialog "Node.js is not installed or not in PATH. Please install Node.js first." buttons {"OK"} default button "OK" with icon stop'
    exit 1
fi

# Check if npm dependencies are installed
if [ ! -d "node_modules" ]; then
    echo "📦 Installing dependencies..."
    npm install
fi

# Kill any existing process on port 4000
echo "🧹 Cleaning up existing processes..."
lsof -ti:4000 | xargs kill -9 2>/dev/null || true

# Export environment variables for orchestrator
export STARTUP_MODE
export AUTO_START_AGENTS
export AUTO_START_PIPELINE
export BATCH_SIZE
export WORKFLOW_PRESET
export VERBOSE_LOGGING
export DEBUG_MODE="$VERBOSE_LOGGING"

# Start the orchestrator in the background
echo "🚀 Starting orchestrator..."
if [ "$VERBOSE_LOGGING" = "true" ]; then
    npm run dev &
    ORCHESTRATOR_PID=$!
else
    npm run dev > /dev/null 2>&1 &
    ORCHESTRATOR_PID=$!
fi

# Wait for the server to start (max 30 seconds)
echo "⏳ Waiting for server to start..."
for i in {1..30}; do
    if curl -s http://localhost:4000/health > /dev/null 2>&1; then
        echo "✅ Server is running on port 4000"
        break
    fi
    sleep 1
done

# Check if server started successfully
if ! curl -s http://localhost:4000/health > /dev/null 2>&1; then
    osascript -e 'display dialog "Failed to start the dashboard server. Please check the logs." buttons {"OK"} default button "OK" with icon stop'
    kill $ORCHESTRATOR_PID 2>/dev/null || true
    exit 1
fi

# Open the dashboard in the default browser (if requested)
if [ "$OPEN_BROWSER" = "true" ]; then
    echo "🌐 Opening dashboard in browser..."
    sleep 2
    open "http://localhost:4000/monitor/"
else
    echo "🌐 Dashboard available at: http://localhost:4000/monitor/"
fi

# Show success notification
osascript -e 'display notification "Islamic Text Processing Dashboard is now running!" with title "Dashboard Started" sound name "Glass"'

echo "🎉 Dashboard launched successfully!"
echo "📊 Dashboard URL: http://localhost:4000/monitor/"
echo "🛑 To stop: Close this window or use Command+Q"

# Keep the script running to maintain the server
echo "💡 Keep this window open to keep the dashboard running..."

# Wait for the orchestrator process
wait $ORCHESTRATOR_PID